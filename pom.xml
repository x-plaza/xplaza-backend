<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Model version -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Project coordinates -->
	<groupId>com.xplaza</groupId>
	<artifactId>backend</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<!-- Project metadata -->
	<name>xplaza-backend</name>
	<description>Backend for X-Plaza.</description>
	<url>https://github.com/x-plaza/xplaza-backend</url>

	<!-- License declaration -->
	<licenses>
		<license>
			<name>Proprietary</name>
			<distribution>repo</distribution>
			<comments>This software is proprietary and not licensed for redistribution.</comments>
		</license>
	</licenses>

	<!-- Developer information -->
	<developers>
		<developer>
			<id>xplaza</id>
			<name>X-Plaza Team</name>
			<url>https://github.com/x-plaza</url>
		</developer>
	</developers>

	<!-- Source control management details -->
	<scm>
		<connection>scm:git:git://github.com/x-plaza/xplaza-backend.git</connection>
		<developerConnection>scm:git:ssh://github.com/x-plaza/xplaza-backend.git</developerConnection>
		<url>https://github.com/x-plaza/xplaza-backend</url>
		<tag>HEAD</tag>
	</scm>

	<!-- Deployment repository for GitHub Packages -->
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/x-plaza/xplaza-backend</url>
		</repository>
	</distributionManagement>

	<!-- Inherit from Spring Boot parent for dependency management -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Properties -->
	<properties>
		<java.version>24</java.version>
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<!-- Spring Boot Actuator for health checks -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- H2 in-memory database for runtime -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Data JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot DevTools for development-time features -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Testing dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Spring Mail -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- PostgreSQL driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
			<version>42.7.7</version>
		</dependency>

		<!-- Lombok for boilerplate code reduction -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.38</version>
			<optional>true</optional>
		</dependency>

		<!-- Jackson module for Java 8 date/time types -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<!-- Hibernate Types for advanced types support -->
		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-60</artifactId>
			<version>2.21.1</version>
		</dependency>

		<!-- JetBrains annotations -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>26.0.2</version>
			<scope>compile</scope>
		</dependency>

		<!-- Jakarta Validation API -->
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>3.1.1</version>
		</dependency>

		<!-- Jakarta XML Bind API -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>4.0.2</version>
		</dependency>

		<!-- JSON library -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20250517</version>
		</dependency>

		<!-- JSON Web Token library -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.12.6</version>
		</dependency>

		<!-- OkHttp HTTP client -->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>4.12.0</version>
		</dependency>

		<!-- Telesign client -->
		<dependency>
			<groupId>com.telesign</groupId>
			<artifactId>telesign</artifactId>
			<version>2.5.0</version>
		</dependency>

		<!-- OpenAPI UI for Spring -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.9</version>
		</dependency>

		<!-- MapStruct for annotation-based mapping -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.6.3</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.5.5.Final</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<!-- Build plugins -->
	<build>
		<plugins>
			<!-- Spring Boot Maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.5.0</version>
				<configuration>
					<!-- Exclude Lombok from repackaging -->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Cobertura code coverage plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check/>
				</configuration>
			</plugin>

			<!-- Spotless code formatter plugin -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.44.5</version>
				<configuration>
					<trimTrailingWhitespace/>
					<endWithNewline/>
					<lineEndings>UNIX</lineEndings>
					<java>
						<importOrder>
							<file>${basedir}/eclipse.importorder</file>
						</importOrder>
						<removeUnusedImports/>
						<toggleOffOn/>
						<eclipse>
							<file>${basedir}/eclipse-formatter-profile.xml</file>
						</eclipse>
						<licenseHeader>
							<file>${basedir}/license-header</file>
						</licenseHeader>
					</java>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JaCoCo code coverage plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.13</version>
				<executions>
					<!-- Prepare JaCoCo agent -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- Generate coverage report -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
							<formats>
								<format>HTML</format>
								<format>CSV</format>
								<format>XML</format>
							</formats>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.38</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>